name: Check TestCi in PR

on:
  workflow_dispatch:
  workflow_call:

jobs:
  find_and_mark-pr-with-status-pending:
    runs-on: ubuntu-latest
    steps:
      - name: 'Checkout do código (contexto inicial)'
        uses: actions/checkout@v4
      - name: 'Encontrar PR aberto a partir da branch'
        id: find_pr
        run: |
          # Usa a CLI do GitHub para listar PRs abertos que vêm da branch selecionada
          # O formato de saída é JSON, contendo o número e o SHA do último commit.
          PR_DATA=$(gh pr list --head "${{ github.ref_name }}" --state open --json number,headRefOid)
          
          # Validação: Verifica se algum PR foi encontrado
          if [[ -z "$PR_DATA" || "$PR_DATA" == "[]" ]]; then
            echo "::error::Nenhum Pull Request aberto encontrado para a branch '${{ github.ref_name }}'."
            exit 1
          fi
          
          # Validação: Verifica se mais de um PR foi encontrado (caso raro, mas possível)
          PR_COUNT=$(echo "$PR_DATA" | jq 'length')
          if [[ "$PR_COUNT" -gt 1 ]]; then
            echo "::error::Mais de um Pull Request aberto encontrado para a branch '${{ github.ref_name }}'. Aborte."
            exit 1
          fi
          
          # Extrai os dados do PR usando 'jq' e os exporta para os próximos passos
          PR_SHA=$(echo "$PR_DATA" | jq -r '.[0].headRefOid')
          PR_NUMBER=$(echo "$PR_DATA" | jq -r '.[0].number')
          
          echo "PR encontrado: #${PR_NUMBER}"
          echo "SHA do commit: ${PR_SHA}"
          
          echo "sha=${PR_SHA}" >> $GITHUB_OUTPUT
          echo "number=${PR_NUMBER}" >> $GITHUB_OUTPUT
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: 'Aprovar verificação manual'
        run: |
          curl --request POST \
          --url "https://api.github.com/repos/${{ github.repository }}/statuses/${{ steps.find_pr.outputs.sha }}" \
          --header "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
          --header "Accept: application/vnd.github.v3+json" \
          --data '{
            "state": "pending",
            "description": "Execução do CI TestCI em andamento!...",
            "context": "Verificacao Manual CI"
          }'

  exec-tests:
   needs: find_and_mark-pr-with-status-pending
   uses: ./.github/workflows/test.yml
   
  mark-pr-with-approve-or-failure:
    needs: exec-tests
    runs-on: ubuntu-latest
    steps:
      - name: 'Aprovar verificação manual'
        if: success()
        run: |
          curl --request POST \
          --url "https://api.github.com/repos/${{ github.repository }}/statuses/${{ steps.find_pr.outputs.sha }}" \
          --header "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
          --header "Accept: application/vnd.github.v3+json" \
          --data '{
            "state": "success",
            "description": "Verificação manual executada e aprovada com sucesso!",
            "context": "Verificacao Manual CI"
          }'

      - name: 'Reportar falha na verificação'
        if: failure()
        run: |
          curl --request POST \
          --url "https://api.github.com/repos/${{ github.repository }}/statuses/${{ steps.find_pr.outputs.sha }}" \
          --header "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
          --header "Accept: application/vnd.github.v3+json" \
          --data '{
            "state": "failure",
            "description": "Os testes manuais falharam.",
            "context": "Verificacao Manual CI"
          }'
